stages:          # List of stages for jobs, and their order of execution
  - build
  - unit-test

.image_names: &image_names
  - "ci-test"
  - "ci-test2"

build-image:       # This job runs in the build stage, which runs first.
  stage: build
  image: 
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  script:
    - echo "Building docker images"
    - echo "{\"auths\":{\"${CI_REGISTRY}\":{\"auth\":\"$(echo -n ${CI_REGISTRY_USER}:${CI_REGISTRY_PASSWORD} | base64)\"}}}" > /kaniko/.docker/config.json
    - /kaniko/executor
      --context "${CI_PROJECT_DIR}"
      --dockerfile "${CI_PROJECT_DIR}/src/ci-test/Dockerfile"
      --destination "${CI_REGISTRY_IMAGE}/${IMAGE_NAME}:test-${CI_PIPELINE_ID}"
  parallel:
    matrix:
      - IMAGE_NAME: *image_names

unit-test:   # This job runs in the test stage.
  stage: unit-test    # It only starts when the job in the build stage completes successfully.
  image: 
    name: "${CI_REGISTRY_IMAGE}/${IMAGE_NAME}:test-${CI_PIPELINE_ID}"
    entrypoint: [""]
  before_script:
    - cd $WORKDIR
  script:
    - npm test
  parallel:
    matrix:
      - IMAGE_NAME: *image_names

.lint-test-job:   # This job also runs in the test stage.
  stage: test    # It can run at the same time as unit-test-job (in parallel).
  script:
    - echo "Linting code... This will take about 10 seconds."
    - sleep 10
    - echo "No lint issues found."
